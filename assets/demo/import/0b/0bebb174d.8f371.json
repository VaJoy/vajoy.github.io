[1,["11QsLVR2tD0JXJiRV9r450"],["_effectAsset"],[["cc.Material",["_name","_techIdx","_props","_states","_defines"],-2],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[0,0,1,2,3,4,6],[1,0,1,2,4]],[[[[0,"cyberpunk",3,[{}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_CYBERPUNK":true}]]],0,0,[0],[0],[0]],[[[1,"../demo/4-filters/filters",[{"hash":3012486253,"name":"../demo/4-filters/filters|vs:vert|gray-scale-fs:frag","blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":["USE_LOCAL"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"sampleType":0,"tags":{"builtin":"local"},"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\n  precision highp float;\n  layout(std140) uniform CCGlobal {\n    highp   vec4 cc_time;\n    mediump vec4 cc_screenSize;\n    mediump vec4 cc_nativeSize;\n    mediump vec4 cc_probeInfo;\n    mediump vec4 cc_debug_view_mode;\n  };\n  layout(std140) uniform CCCamera {\n    highp   mat4 cc_matView;\n    highp   mat4 cc_matViewInv;\n    highp   mat4 cc_matProj;\n    highp   mat4 cc_matProjInv;\n    highp   mat4 cc_matViewProj;\n    highp   mat4 cc_matViewProjInv;\n    highp   vec4 cc_cameraPos;\n    mediump vec4 cc_surfaceTransform;\n    mediump vec4 cc_screenScale;\n    mediump vec4 cc_exposure;\n    mediump vec4 cc_mainLitDir;\n    mediump vec4 cc_mainLitColor;\n    mediump vec4 cc_ambientSky;\n    mediump vec4 cc_ambientGround;\n    mediump vec4 cc_fogColor;\n    mediump vec4 cc_fogBase;\n    mediump vec4 cc_fogAdd;\n    mediump vec4 cc_nearFar;\n    mediump vec4 cc_viewPort;\n  };\n  #if USE_LOCAL\n    layout(std140) uniform CCLocal {\n      highp mat4 cc_matWorld;\n      highp mat4 cc_matWorldIT;\n      highp vec4 cc_lightingMapUVParam;\n      highp vec4 cc_localShadowBias;\n      highp vec4 cc_reflectionProbeData1;\n      highp vec4 cc_reflectionProbeData2;\n      highp vec4 cc_reflectionProbeBlendData1;\n      highp vec4 cc_reflectionProbeBlendData2;\n    };\n  #endif\n  in vec3 a_position;\n  in vec2 a_texCoord;\n  out vec2 uv;\n  #if USE_LOCAL\n    in vec4 a_color;\n    out vec4 v_color;\n  #endif\n  vec4 vert() {\n    vec4 pos = vec4(a_position, 1);\n    #if USE_LOCAL\n      pos = cc_matWorld * pos;\n      v_color = a_color;\n    #endif\n    pos = cc_matViewProj * pos;\n    uv = a_texCoord;\n    return  pos;\n  }\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform sampler2D cc_spriteTexture;\nin vec2 uv;\n#if USE_LOCAL\n  in vec4 v_color;\n#endif\nvec4 grayscale(vec4 color) {\n  float gray = dot(color.rgb, vec3(0.299, 0.587, 0.114));\n  return vec4(vec3(gray), color.a);\n}\nvec4 frag() {\n  vec4 color = texture(cc_spriteTexture, uv);\n  #if USE_LOCAL\n    color *= v_color;\n  #endif\n  return grayscale(color);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\n  precision highp float;\n  uniform highp mat4 cc_matViewProj;\n  #if USE_LOCAL\n    uniform highp mat4 cc_matWorld;\n  #endif\n  attribute vec3 a_position;\n  attribute vec2 a_texCoord;\n  varying vec2 uv;\n  #if USE_LOCAL\n    attribute vec4 a_color;\n    varying vec4 v_color;\n  #endif\n  vec4 vert() {\n    vec4 pos = vec4(a_position, 1);\n    #if USE_LOCAL\n      pos = cc_matWorld * pos;\n      v_color = a_color;\n    #endif\n    pos = cc_matViewProj * pos;\n    uv = a_texCoord;\n    return  pos;\n  }\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform sampler2D cc_spriteTexture;\nvarying vec2 uv;\n#if USE_LOCAL\n  varying vec4 v_color;\n#endif\nvec4 grayscale(vec4 color) {\n  float gray = dot(color.rgb, vec3(0.299, 0.587, 0.114));\n  return vec4(vec3(gray), color.a);\n}\nvec4 frag() {\n  vec4 color = texture2D(cc_spriteTexture, uv);\n  #if USE_LOCAL\n    color *= v_color;\n  #endif\n  return grayscale(color);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":[]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":56,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":0}},"defines":[{"name":"USE_LOCAL","type":"boolean"}]},{"hash":3340995948,"name":"../demo/4-filters/filters|vs:vert|invert-fs:frag","blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":["USE_LOCAL"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"sampleType":0,"tags":{"builtin":"local"},"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\n  precision highp float;\n  layout(std140) uniform CCGlobal {\n    highp   vec4 cc_time;\n    mediump vec4 cc_screenSize;\n    mediump vec4 cc_nativeSize;\n    mediump vec4 cc_probeInfo;\n    mediump vec4 cc_debug_view_mode;\n  };\n  layout(std140) uniform CCCamera {\n    highp   mat4 cc_matView;\n    highp   mat4 cc_matViewInv;\n    highp   mat4 cc_matProj;\n    highp   mat4 cc_matProjInv;\n    highp   mat4 cc_matViewProj;\n    highp   mat4 cc_matViewProjInv;\n    highp   vec4 cc_cameraPos;\n    mediump vec4 cc_surfaceTransform;\n    mediump vec4 cc_screenScale;\n    mediump vec4 cc_exposure;\n    mediump vec4 cc_mainLitDir;\n    mediump vec4 cc_mainLitColor;\n    mediump vec4 cc_ambientSky;\n    mediump vec4 cc_ambientGround;\n    mediump vec4 cc_fogColor;\n    mediump vec4 cc_fogBase;\n    mediump vec4 cc_fogAdd;\n    mediump vec4 cc_nearFar;\n    mediump vec4 cc_viewPort;\n  };\n  #if USE_LOCAL\n    layout(std140) uniform CCLocal {\n      highp mat4 cc_matWorld;\n      highp mat4 cc_matWorldIT;\n      highp vec4 cc_lightingMapUVParam;\n      highp vec4 cc_localShadowBias;\n      highp vec4 cc_reflectionProbeData1;\n      highp vec4 cc_reflectionProbeData2;\n      highp vec4 cc_reflectionProbeBlendData1;\n      highp vec4 cc_reflectionProbeBlendData2;\n    };\n  #endif\n  in vec3 a_position;\n  in vec2 a_texCoord;\n  out vec2 uv;\n  #if USE_LOCAL\n    in vec4 a_color;\n    out vec4 v_color;\n  #endif\n  vec4 vert() {\n    vec4 pos = vec4(a_position, 1);\n    #if USE_LOCAL\n      pos = cc_matWorld * pos;\n      v_color = a_color;\n    #endif\n    pos = cc_matViewProj * pos;\n    uv = a_texCoord;\n    return  pos;\n  }\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform sampler2D cc_spriteTexture;\nin vec2 uv;\n#if USE_LOCAL\n  in vec4 v_color;\n#endif\nvec4 invert(vec4 color) {\n  return vec4(1.0 - color.rgb, color.a);\n}\nvec4 frag() {\n  vec4 color = texture(cc_spriteTexture, uv);\n  #if USE_LOCAL\n    color *= v_color;\n  #endif\n  return invert(color);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\n  precision highp float;\n  uniform highp mat4 cc_matViewProj;\n  #if USE_LOCAL\n    uniform highp mat4 cc_matWorld;\n  #endif\n  attribute vec3 a_position;\n  attribute vec2 a_texCoord;\n  varying vec2 uv;\n  #if USE_LOCAL\n    attribute vec4 a_color;\n    varying vec4 v_color;\n  #endif\n  vec4 vert() {\n    vec4 pos = vec4(a_position, 1);\n    #if USE_LOCAL\n      pos = cc_matWorld * pos;\n      v_color = a_color;\n    #endif\n    pos = cc_matViewProj * pos;\n    uv = a_texCoord;\n    return  pos;\n  }\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform sampler2D cc_spriteTexture;\nvarying vec2 uv;\n#if USE_LOCAL\n  varying vec4 v_color;\n#endif\nvec4 invert(vec4 color) {\n  return vec4(1.0 - color.rgb, color.a);\n}\nvec4 frag() {\n  vec4 color = texture2D(cc_spriteTexture, uv);\n  #if USE_LOCAL\n    color *= v_color;\n  #endif\n  return invert(color);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":[]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":56,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":0}},"defines":[{"name":"USE_LOCAL","type":"boolean"}]},{"hash":164350411,"name":"../demo/4-filters/filters|vs:vert|pixel-fs:frag","blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":["USE_LOCAL"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"sampleType":0,"tags":{"builtin":"local"},"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\n  precision highp float;\n  layout(std140) uniform CCGlobal {\n    highp   vec4 cc_time;\n    mediump vec4 cc_screenSize;\n    mediump vec4 cc_nativeSize;\n    mediump vec4 cc_probeInfo;\n    mediump vec4 cc_debug_view_mode;\n  };\n  layout(std140) uniform CCCamera {\n    highp   mat4 cc_matView;\n    highp   mat4 cc_matViewInv;\n    highp   mat4 cc_matProj;\n    highp   mat4 cc_matProjInv;\n    highp   mat4 cc_matViewProj;\n    highp   mat4 cc_matViewProjInv;\n    highp   vec4 cc_cameraPos;\n    mediump vec4 cc_surfaceTransform;\n    mediump vec4 cc_screenScale;\n    mediump vec4 cc_exposure;\n    mediump vec4 cc_mainLitDir;\n    mediump vec4 cc_mainLitColor;\n    mediump vec4 cc_ambientSky;\n    mediump vec4 cc_ambientGround;\n    mediump vec4 cc_fogColor;\n    mediump vec4 cc_fogBase;\n    mediump vec4 cc_fogAdd;\n    mediump vec4 cc_nearFar;\n    mediump vec4 cc_viewPort;\n  };\n  #if USE_LOCAL\n    layout(std140) uniform CCLocal {\n      highp mat4 cc_matWorld;\n      highp mat4 cc_matWorldIT;\n      highp vec4 cc_lightingMapUVParam;\n      highp vec4 cc_localShadowBias;\n      highp vec4 cc_reflectionProbeData1;\n      highp vec4 cc_reflectionProbeData2;\n      highp vec4 cc_reflectionProbeBlendData1;\n      highp vec4 cc_reflectionProbeBlendData2;\n    };\n  #endif\n  in vec3 a_position;\n  in vec2 a_texCoord;\n  out vec2 uv;\n  #if USE_LOCAL\n    in vec4 a_color;\n    out vec4 v_color;\n  #endif\n  vec4 vert() {\n    vec4 pos = vec4(a_position, 1);\n    #if USE_LOCAL\n      pos = cc_matWorld * pos;\n      v_color = a_color;\n    #endif\n    pos = cc_matViewProj * pos;\n    uv = a_texCoord;\n    return  pos;\n  }\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform sampler2D cc_spriteTexture;\nin vec2 uv;\n#if USE_LOCAL\n  in vec4 v_color;\n#endif\nfloat pixelSize = 30.0;\nvec4 pixelate(vec2 uv) {\n    vec2 pixelatedUV = floor(uv * pixelSize) / pixelSize;\n    return texture(cc_spriteTexture, pixelatedUV);\n}\nvec4 frag() {\n  vec4 color = pixelate(uv);\n  #if USE_LOCAL\n    color *= v_color;\n  #endif\n  return color;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\n  precision highp float;\n  uniform highp mat4 cc_matViewProj;\n  #if USE_LOCAL\n    uniform highp mat4 cc_matWorld;\n  #endif\n  attribute vec3 a_position;\n  attribute vec2 a_texCoord;\n  varying vec2 uv;\n  #if USE_LOCAL\n    attribute vec4 a_color;\n    varying vec4 v_color;\n  #endif\n  vec4 vert() {\n    vec4 pos = vec4(a_position, 1);\n    #if USE_LOCAL\n      pos = cc_matWorld * pos;\n      v_color = a_color;\n    #endif\n    pos = cc_matViewProj * pos;\n    uv = a_texCoord;\n    return  pos;\n  }\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform sampler2D cc_spriteTexture;\nvarying vec2 uv;\n#if USE_LOCAL\n  varying vec4 v_color;\n#endif\nfloat pixelSize = 30.0;\nvec4 pixelate(vec2 uv) {\n    vec2 pixelatedUV = floor(uv * pixelSize) / pixelSize;\n    return texture2D(cc_spriteTexture, pixelatedUV);\n}\nvec4 frag() {\n  vec4 color = pixelate(uv);\n  #if USE_LOCAL\n    color *= v_color;\n  #endif\n  return color;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":[]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":56,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":0}},"defines":[{"name":"USE_LOCAL","type":"boolean"}]},{"hash":2129423981,"name":"../demo/4-filters/filters|vs:vert|lut-fs:frag","blocks":[{"name":"LutArgs","stageFlags":16,"binding":0,"members":[{"name":"textureSize","type":14,"count":1},{"name":"timeFactor","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":["USE_LOCAL"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"sampleType":0,"tags":{"builtin":"local"},"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"LutArgs","stageFlags":16,"binding":0,"members":[{"name":"textureSize","type":14,"count":1},{"name":"timeFactor","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\n  precision highp float;\n  layout(std140) uniform CCGlobal {\n    highp   vec4 cc_time;\n    mediump vec4 cc_screenSize;\n    mediump vec4 cc_nativeSize;\n    mediump vec4 cc_probeInfo;\n    mediump vec4 cc_debug_view_mode;\n  };\n  layout(std140) uniform CCCamera {\n    highp   mat4 cc_matView;\n    highp   mat4 cc_matViewInv;\n    highp   mat4 cc_matProj;\n    highp   mat4 cc_matProjInv;\n    highp   mat4 cc_matViewProj;\n    highp   mat4 cc_matViewProjInv;\n    highp   vec4 cc_cameraPos;\n    mediump vec4 cc_surfaceTransform;\n    mediump vec4 cc_screenScale;\n    mediump vec4 cc_exposure;\n    mediump vec4 cc_mainLitDir;\n    mediump vec4 cc_mainLitColor;\n    mediump vec4 cc_ambientSky;\n    mediump vec4 cc_ambientGround;\n    mediump vec4 cc_fogColor;\n    mediump vec4 cc_fogBase;\n    mediump vec4 cc_fogAdd;\n    mediump vec4 cc_nearFar;\n    mediump vec4 cc_viewPort;\n  };\n  #if USE_LOCAL\n    layout(std140) uniform CCLocal {\n      highp mat4 cc_matWorld;\n      highp mat4 cc_matWorldIT;\n      highp vec4 cc_lightingMapUVParam;\n      highp vec4 cc_localShadowBias;\n      highp vec4 cc_reflectionProbeData1;\n      highp vec4 cc_reflectionProbeData2;\n      highp vec4 cc_reflectionProbeBlendData1;\n      highp vec4 cc_reflectionProbeBlendData2;\n    };\n  #endif\n  in vec3 a_position;\n  in vec2 a_texCoord;\n  out vec2 uv;\n  #if USE_LOCAL\n    in vec4 a_color;\n    out vec4 v_color;\n  #endif\n  vec4 vert() {\n    vec4 pos = vec4(a_position, 1);\n    #if USE_LOCAL\n      pos = cc_matWorld * pos;\n      v_color = a_color;\n    #endif\n    pos = cc_matViewProj * pos;\n    uv = a_texCoord;\n    return  pos;\n  }\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform sampler2D cc_spriteTexture;\nin vec2 uv;\n#if USE_LOCAL\n  in vec4 v_color;\n#endif\nlayout(std140) uniform LutArgs {\n  vec2 textureSize;\n  float timeFactor;\n};\nvec4 sepia(vec4 color) {\n  vec3 newColor;\n  newColor.r = dot(color.rgb, vec3(0.393, 0.769, 0.189));\n  newColor.g = dot(color.rgb, vec3(0.349, 0.686, 0.168));\n  newColor.b = dot(color.rgb, vec3(0.272, 0.534, 0.131));\n  return vec4(min(newColor, vec3(1.0)), color.a);\n}\nvec4 cyberpunk(vec4 color) {\n  color.rgb = (color.rgb - 0.5) * 2.0 + 0.5;\n  float r = color.r * 1.2;\n  float g = color.g * 0.9;\n  float b = color.b * 1.5;\n  r = min(r + color.b * 0.2, 1.0);\n  b = min(b + color.r * 0.3, 1.0);\n  return vec4(r, g, b, color.a);\n}\nvec4 duotone(vec4 color) {\n  vec3 darkColor = vec3(0.0, 0.0, 0.5);\n  vec3 lightColor = vec3(1.0, 0.8, 0.2);\n  float luminance = dot(color.rgb, vec3(0.299, 0.587, 0.114));\n  return vec4(mix(darkColor, lightColor, luminance), color.a);\n}\nvec4 glitchEffect(vec4 color, vec2 uv) {\n  float time;\n  float intensity = 0.02;\n  vec2 redUV = uv + vec2(cos(time * 10.0) * intensity, sin(time * 8.0) * intensity);\n  float r = texture(cc_spriteTexture, redUV).r;\n  vec2 greenUV = uv + vec2(sin(time * 12.0) * intensity, cos(time * 9.0) * intensity);\n  float g = texture(cc_spriteTexture, greenUV).g;\n  vec2 blueUV = uv + vec2(cos(time * 7.0) * intensity, sin(time * 11.0) * intensity);\n  float b = texture(cc_spriteTexture, blueUV).b;\n  return vec4(r, g, b, color.a);\n}\nfloat grainIntensity = 3.25;\nfloat vignetteIntensity = 0.8;\nvec3 fadeColor = vec3(0.15, 0.15, 0.05);\nfloat filmGrain(vec2 coord, float time) {\n  return fract(sin(dot(coord * time, vec2(12.9898, 78.233))) * 43758.5453);\n}\nfloat vignette(vec2 uv) {\n  vec2 center = vec2(0.5, 0.5);\n  float dist = distance(uv, center);\n  return 1.0 - smoothstep(0.3, 0.8, dist * vignetteIntensity);\n}\nvec3 filmCurve(vec3 color) {\n  vec3 x = color * 1.2;\n  vec3 curve = x * (1.0 / (1.0 + exp(-5.0*(x-0.5))));\n  return mix(color, curve, 0.7);\n}\nvec3 filmColorGrade(vec3 color) {\n  vec3 shadows = vec3(0.1, 0.25, 0.3);\n  vec3 midtones = vec3(0.7, 0.5, 0.3);\n  float luminance = dot(color, vec3(0.2126, 0.7152, 0.0722));\n  vec3 graded = mix(shadows, midtones, smoothstep(0.2, 0.8, luminance));\n  return mix(color, graded * color, 0.4);\n}\nvec3 filmFade(vec3 color) {\n  return mix(color, fadeColor, 0.15);\n}\nvec4 film(vec4 color, vec2 uv) {\n  color.rgb = filmCurve(color.rgb);\n  color.rgb = filmColorGrade(color.rgb);\n  color.rgb = filmFade(color.rgb);\n  color.rgb *= vignette(uv);\n  float grain = filmGrain(uv, timeFactor) * grainIntensity;\n  color.rgb += (grain - 0.5) * 0.1;\n  return color;\n}\nvec4 frag() {\n  vec4 color = texture(cc_spriteTexture, uv);\n  #if USE_LOCAL\n    color *= v_color;\n  #endif\n  #if USE_SEPIA\n    color = sepia(color);\n  #elif USE_CYBERPUNK\n    color = cyberpunk(color);\n  #elif USE_DUOTONE\n    color = duotone(color);\n  #elif USE_GLITCH\n    color = glitchEffect(color, uv);\n  #elif USE_FILM\n    color = film(color, uv);\n  #endif\n  return color;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\n  precision highp float;\n  uniform highp mat4 cc_matViewProj;\n  #if USE_LOCAL\n    uniform highp mat4 cc_matWorld;\n  #endif\n  attribute vec3 a_position;\n  attribute vec2 a_texCoord;\n  varying vec2 uv;\n  #if USE_LOCAL\n    attribute vec4 a_color;\n    varying vec4 v_color;\n  #endif\n  vec4 vert() {\n    vec4 pos = vec4(a_position, 1);\n    #if USE_LOCAL\n      pos = cc_matWorld * pos;\n      v_color = a_color;\n    #endif\n    pos = cc_matViewProj * pos;\n    uv = a_texCoord;\n    return  pos;\n  }\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform sampler2D cc_spriteTexture;\nvarying vec2 uv;\n#if USE_LOCAL\n  varying vec4 v_color;\n#endif\n   uniform float timeFactor;\nvec4 sepia(vec4 color) {\n  vec3 newColor;\n  newColor.r = dot(color.rgb, vec3(0.393, 0.769, 0.189));\n  newColor.g = dot(color.rgb, vec3(0.349, 0.686, 0.168));\n  newColor.b = dot(color.rgb, vec3(0.272, 0.534, 0.131));\n  return vec4(min(newColor, vec3(1.0)), color.a);\n}\nvec4 cyberpunk(vec4 color) {\n  color.rgb = (color.rgb - 0.5) * 2.0 + 0.5;\n  float r = color.r * 1.2;\n  float g = color.g * 0.9;\n  float b = color.b * 1.5;\n  r = min(r + color.b * 0.2, 1.0);\n  b = min(b + color.r * 0.3, 1.0);\n  return vec4(r, g, b, color.a);\n}\nvec4 duotone(vec4 color) {\n  vec3 darkColor = vec3(0.0, 0.0, 0.5);\n  vec3 lightColor = vec3(1.0, 0.8, 0.2);\n  float luminance = dot(color.rgb, vec3(0.299, 0.587, 0.114));\n  return vec4(mix(darkColor, lightColor, luminance), color.a);\n}\nvec4 glitchEffect(vec4 color, vec2 uv) {\n  float time;\n  float intensity = 0.02;\n  vec2 redUV = uv + vec2(cos(time * 10.0) * intensity, sin(time * 8.0) * intensity);\n  float r = texture2D(cc_spriteTexture, redUV).r;\n  vec2 greenUV = uv + vec2(sin(time * 12.0) * intensity, cos(time * 9.0) * intensity);\n  float g = texture2D(cc_spriteTexture, greenUV).g;\n  vec2 blueUV = uv + vec2(cos(time * 7.0) * intensity, sin(time * 11.0) * intensity);\n  float b = texture2D(cc_spriteTexture, blueUV).b;\n  return vec4(r, g, b, color.a);\n}\nfloat grainIntensity = 3.25;\nfloat vignetteIntensity = 0.8;\nvec3 fadeColor = vec3(0.15, 0.15, 0.05);\nfloat filmGrain(vec2 coord, float time) {\n  return fract(sin(dot(coord * time, vec2(12.9898, 78.233))) * 43758.5453);\n}\nfloat vignette(vec2 uv) {\n  vec2 center = vec2(0.5, 0.5);\n  float dist = distance(uv, center);\n  return 1.0 - smoothstep(0.3, 0.8, dist * vignetteIntensity);\n}\nvec3 filmCurve(vec3 color) {\n  vec3 x = color * 1.2;\n  vec3 curve = x * (1.0 / (1.0 + exp(-5.0*(x-0.5))));\n  return mix(color, curve, 0.7);\n}\nvec3 filmColorGrade(vec3 color) {\n  vec3 shadows = vec3(0.1, 0.25, 0.3);\n  vec3 midtones = vec3(0.7, 0.5, 0.3);\n  float luminance = dot(color, vec3(0.2126, 0.7152, 0.0722));\n  vec3 graded = mix(shadows, midtones, smoothstep(0.2, 0.8, luminance));\n  return mix(color, graded * color, 0.4);\n}\nvec3 filmFade(vec3 color) {\n  return mix(color, fadeColor, 0.15);\n}\nvec4 film(vec4 color, vec2 uv) {\n  color.rgb = filmCurve(color.rgb);\n  color.rgb = filmColorGrade(color.rgb);\n  color.rgb = filmFade(color.rgb);\n  color.rgb *= vignette(uv);\n  float grain = filmGrain(uv, timeFactor) * grainIntensity;\n  color.rgb += (grain - 0.5) * 0.1;\n  return color;\n}\nvec4 frag() {\n  vec4 color = texture2D(cc_spriteTexture, uv);\n  #if USE_LOCAL\n    color *= v_color;\n  #endif\n  #if USE_SEPIA\n    color = sepia(color);\n  #elif USE_CYBERPUNK\n    color = cyberpunk(color);\n  #elif USE_DUOTONE\n    color = duotone(color);\n  #elif USE_GLITCH\n    color = glitchEffect(color, uv);\n  #elif USE_FILM\n    color = film(color, uv);\n  #endif\n  return color;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":[]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":56,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":2}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"USE_SEPIA","type":"boolean"},{"name":"USE_CYBERPUNK","type":"boolean"},{"name":"USE_DUOTONE","type":"boolean"},{"name":"USE_GLITCH","type":"boolean"},{"name":"USE_FILM","type":"boolean"}]},{"hash":3755835726,"name":"../demo/4-filters/filters|vs:vert|edge-detection-fs:frag","blocks":[{"name":"EdgeDetectionArgs","stageFlags":16,"binding":0,"members":[{"name":"textureSize","type":14,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":["USE_LOCAL"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"sampleType":0,"tags":{"builtin":"local"},"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"EdgeDetectionArgs","stageFlags":16,"binding":0,"members":[{"name":"textureSize","type":14,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\n  precision highp float;\n  layout(std140) uniform CCGlobal {\n    highp   vec4 cc_time;\n    mediump vec4 cc_screenSize;\n    mediump vec4 cc_nativeSize;\n    mediump vec4 cc_probeInfo;\n    mediump vec4 cc_debug_view_mode;\n  };\n  layout(std140) uniform CCCamera {\n    highp   mat4 cc_matView;\n    highp   mat4 cc_matViewInv;\n    highp   mat4 cc_matProj;\n    highp   mat4 cc_matProjInv;\n    highp   mat4 cc_matViewProj;\n    highp   mat4 cc_matViewProjInv;\n    highp   vec4 cc_cameraPos;\n    mediump vec4 cc_surfaceTransform;\n    mediump vec4 cc_screenScale;\n    mediump vec4 cc_exposure;\n    mediump vec4 cc_mainLitDir;\n    mediump vec4 cc_mainLitColor;\n    mediump vec4 cc_ambientSky;\n    mediump vec4 cc_ambientGround;\n    mediump vec4 cc_fogColor;\n    mediump vec4 cc_fogBase;\n    mediump vec4 cc_fogAdd;\n    mediump vec4 cc_nearFar;\n    mediump vec4 cc_viewPort;\n  };\n  #if USE_LOCAL\n    layout(std140) uniform CCLocal {\n      highp mat4 cc_matWorld;\n      highp mat4 cc_matWorldIT;\n      highp vec4 cc_lightingMapUVParam;\n      highp vec4 cc_localShadowBias;\n      highp vec4 cc_reflectionProbeData1;\n      highp vec4 cc_reflectionProbeData2;\n      highp vec4 cc_reflectionProbeBlendData1;\n      highp vec4 cc_reflectionProbeBlendData2;\n    };\n  #endif\n  in vec3 a_position;\n  in vec2 a_texCoord;\n  out vec2 uv;\n  #if USE_LOCAL\n    in vec4 a_color;\n    out vec4 v_color;\n  #endif\n  vec4 vert() {\n    vec4 pos = vec4(a_position, 1);\n    #if USE_LOCAL\n      pos = cc_matWorld * pos;\n      v_color = a_color;\n    #endif\n    pos = cc_matViewProj * pos;\n    uv = a_texCoord;\n    return  pos;\n  }\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform sampler2D cc_spriteTexture;\nin vec2 uv;\nlayout(std140) uniform EdgeDetectionArgs {\n  vec2 textureSize;\n};\nvec4 frag() {\n  vec2 pixelSize = 1.0 / textureSize;\n  vec4 topLeft = texture(cc_spriteTexture, uv + vec2(-pixelSize.x, pixelSize.y));\n  vec4 top = texture(cc_spriteTexture, uv + vec2(0.0, pixelSize.y));\n  vec4 topRight = texture(cc_spriteTexture, uv + vec2(pixelSize.x, pixelSize.y));\n  vec4 left = texture(cc_spriteTexture, uv + vec2(-pixelSize.x, 0.0));\n  vec4 right = texture(cc_spriteTexture, uv + vec2(pixelSize.x, 0.0));\n  vec4 bottomLeft = texture(cc_spriteTexture, uv + vec2(-pixelSize.x, -pixelSize.y));\n  vec4 bottom = texture(cc_spriteTexture, uv + vec2(0.0, -pixelSize.y));\n  vec4 bottomRight = texture(cc_spriteTexture, uv + vec2(pixelSize.x, -pixelSize.y));\n  vec4 gx = -topLeft - 2.0 * left - bottomLeft + topRight + 2.0 * right + bottomRight;\n  vec4 gy = -topLeft - 2.0 * top - topRight + bottomLeft + 2.0 * bottom + bottomRight;\n  float edge = length(vec2(gx.r, gy.r));\n  edge = smoothstep(0.1, 0.3, edge);\n  return vec4(vec3(1.0 - edge), 1.0);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\n  precision highp float;\n  uniform highp mat4 cc_matViewProj;\n  #if USE_LOCAL\n    uniform highp mat4 cc_matWorld;\n  #endif\n  attribute vec3 a_position;\n  attribute vec2 a_texCoord;\n  varying vec2 uv;\n  #if USE_LOCAL\n    attribute vec4 a_color;\n    varying vec4 v_color;\n  #endif\n  vec4 vert() {\n    vec4 pos = vec4(a_position, 1);\n    #if USE_LOCAL\n      pos = cc_matWorld * pos;\n      v_color = a_color;\n    #endif\n    pos = cc_matViewProj * pos;\n    uv = a_texCoord;\n    return  pos;\n  }\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform sampler2D cc_spriteTexture;\nvarying vec2 uv;\n   uniform vec2 textureSize;\nvec4 frag() {\n  vec2 pixelSize = 1.0 / textureSize;\n  vec4 topLeft = texture2D(cc_spriteTexture, uv + vec2(-pixelSize.x, pixelSize.y));\n  vec4 top = texture2D(cc_spriteTexture, uv + vec2(0.0, pixelSize.y));\n  vec4 topRight = texture2D(cc_spriteTexture, uv + vec2(pixelSize.x, pixelSize.y));\n  vec4 left = texture2D(cc_spriteTexture, uv + vec2(-pixelSize.x, 0.0));\n  vec4 right = texture2D(cc_spriteTexture, uv + vec2(pixelSize.x, 0.0));\n  vec4 bottomLeft = texture2D(cc_spriteTexture, uv + vec2(-pixelSize.x, -pixelSize.y));\n  vec4 bottom = texture2D(cc_spriteTexture, uv + vec2(0.0, -pixelSize.y));\n  vec4 bottomRight = texture2D(cc_spriteTexture, uv + vec2(pixelSize.x, -pixelSize.y));\n  vec4 gx = -topLeft - 2.0 * left - bottomLeft + topRight + 2.0 * right + bottomRight;\n  vec4 gy = -topLeft - 2.0 * top - topRight + bottomLeft + 2.0 * bottom + bottomRight;\n  float edge = length(vec2(gx.r, gy.r));\n  edge = smoothstep(0.1, 0.3, edge);\n  return vec4(vec3(1.0 - edge), 1.0);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":[]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":56,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":1}},"defines":[{"name":"USE_LOCAL","type":"boolean"}]}],[{"name":"gray-scale","passes":[{"program":"../demo/4-filters/filters|vs:vert|gray-scale-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false}}]},{"name":"invert","passes":[{"program":"../demo/4-filters/filters|vs:vert|invert-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false}}]},{"name":"pixel","passes":[{"program":"../demo/4-filters/filters|vs:vert|pixel-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false}}]},{"name":"lut","passes":[{"program":"../demo/4-filters/filters|vs:vert|lut-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"textureSize":{"type":14,"value":[192,192]},"timeFactor":{"type":13,"value":[0]}}}]},{"name":"edge-detection","passes":[{"program":"../demo/4-filters/filters|vs:vert|edge-detection-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"textureSize":{"type":14,"value":[192,192]}}}]}]]],0,0,[],[],[]]]]
