[1,["b8zNeIuXVKj4MjewROF/rU","17qQDcfq1L/IVjchXyp5nU","61Yrf2mudF9p7RIpWkSXEo@f9941","fe2tO99rRBqKMpIgbc5Se/@f9941","d23h3aXMhBBKYPGreu0SYP","99kdAELcZO4ZJ2rfgbAgn1@f9941","91XUpUAPBEqZp5m6SwXhd0","d0XYvHriJB9Jmk0JPaACaF"],["node","_spriteFrame","_cameraComponent","root","scene","_parent","_targetTexture","_skeletonData","_customMaterial","asset","renderTexture","_effectAsset"],[["cc.Node",["_name","_layer","_id","_objFlags","__editorExtras__","_components","_parent","_lpos","_children","_lscale","_prefab"],-2,9,1,5,2,5,4],["cc.Sprite",["_sizeMode","_isTrimmedMode","node","_spriteFrame","_customMaterial"],1,1,6,6],["cc.UITransform",["node","_contentSize","_anchorPoint"],3,1,5,5],["cc.Camera",["_projection","_orthoHeight","_near","_far","_visibility","_priority","node","_color","_targetTexture"],-3,1,5,6],"cc.RenderTexture",["cc.SceneAsset",["_name"],2],["cc.Node",["_name","_parent","_components","_lpos"],2,1,2,5],["cc.Canvas",["node","_cameraComponent"],3,1,1],["cc.Widget",["_alignFlags","_top","_bottom","node"],0,1],["cc.TargetInfo",["localID"],2],["sp.Skeleton",["defaultSkin","defaultAnimation","_preCacheMode","node","_skeletonData"],0,1,6],["cc.PrefabInfo",["fileId","targetOverrides","nestedPrefabInstanceRoots","root","instance","asset"],0,1,4,6],["cc.PrefabInfo",["root","asset","fileId","instance","targetOverrides","nestedPrefabInstanceRoots"],-2,2],["cc.PrefabInstance",["fileId","prefabRootNode","propertyOverrides"],1,9],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,1,8],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,1],["cc.Scene",["_name","_children","_prefab","_globals"],2,2,4,4],["cc.SceneGlobals",["ambient","shadows","_skybox","fog","octree","skin","lightProbeInfo","postSettings"],3,4,4,4,4,4,4,4,4],["cc.AmbientInfo",["_skyColorHDR","_groundAlbedoHDR"],3,5,5],["cc.ShadowsInfo",["_shadowColor","_size"],3,5,5],["cc.SkyboxInfo",[],3],["cc.FogInfo",[],3],["cc.OctreeInfo",[],3],["cc.SkinInfo",["_enabled"],2],["cc.LightProbeInfo",[],3],["cc.PostSettingsInfo",[],3],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_states","_defines","_props"],0,12]],[[2,0,1,1],[14,0,1,2,2],[0,0,1,6,5,7,9,3],[5,0,2],[0,0,1,2,8,5,7,4],[0,0,1,6,5,7,3],[0,0,6,5,2],[0,3,4,6,10,3],[0,0,6,5,7,2],[6,0,1,2,3,2],[2,0,1,2,1],[7,0,1,1],[8,0,1,2,3,4],[9,0,2],[10,0,1,2,3,4,4],[1,0,2,3,2],[1,2,3,1],[1,0,1,2,4,3,3],[11,0,1,2,3,4,5,4],[12,0,1,2,3,4,5,6],[13,0,1,2,3],[15,0,1,2,3],[16,0,1,2,3,2],[17,0,1,2,3,4,5,6,7,1],[18,0,1,1],[19,0,1,1],[20,1],[21,1],[22,1],[23,0,2],[24,1],[25,1],[3,0,1,2,3,4,6,7,6],[3,0,5,1,2,3,4,6,7,8,7],[26,0,1,2,4],[27,0,1,2,3,4]],[[[[3,"scene"],[4,"Canvas",33554432,"beI88Z2HpFELqR4T5EMHpg",[-5,-6,-7,-8,-9,-10,-11],[[0,-1,[5,1280,720]],[11,-3,-2],[12,45,5.684341886080802e-14,5.684341886080802e-14,-4]],[1,640,360.00000000000006,0]],[13,["c46/YsCPVOJYA4mWEpNYRx"]],[2,"Spine",33554432,1,[[10,-12,[5,368.260009765625,384.69000244140625],[0,0.5194699342280161,0.011723726117807736]],[14,"default","run",0,-13,1]],[1,312.789,-217.042,0],[1,1.3,1.3,1]],[5,"Sprite",33554432,1,[[0,-14,[5,333,333]],[15,0,-15,2]],[1,-399.564,22.045,0]],[2,"doge_stand",33554432,1,[[0,-16,[5,64,174]],[16,-17,3]],[1,-90.784,0,0],[1,2,2,1]],[6,"RenderTetureNode",1,[[0,-18,[5,1280,720]],[17,0,false,-19,4,5]]],[7,0,{},1,[18,"c46/YsCPVOJYA4mWEpNYRx",null,null,-20,[20,"59ft4LipdHfZKndP8Laroj",null,[[1,["_lpos"],2,[1,-569.766,319,0]],[21,"BackBtn",["_name"],2],[1,["_lrot"],2,[3,0,0,0,1]],[1,["_euler"],2,[1,0,0,0]]]],6]],[22,"scene",[1],[19,null,null,"a8414406-a230-4b10-9fdd-51e5abd016ee",null,null,[7]],[23,[24,[2,0,0,0,0.520833125],[2,0,0,0,0]],[25,[4,4283190348],[0,512,512]],[26],[27],[28],[29,false],[30],[31]]],[9,"Camera",1,[-21],[1,0,0,1000]],[32,0,692.5802310654685,0,2000,1073741824,9,[4,4278190080]],[8,"RenderTextureCamera",1,[[33,0,1,360,0,2000,33554432,-22,[4,4278190080],0]],[1,0,0,1000]]],0,[0,0,1,0,2,10,0,0,1,0,0,1,0,-1,9,0,-2,11,0,-3,3,0,-4,4,0,-5,5,0,-6,6,0,-7,7,0,0,3,0,0,3,0,0,4,0,0,4,0,0,5,0,0,5,0,0,6,0,0,6,0,3,7,0,-1,10,0,0,11,0,4,8,1,5,8,22],[0,0,0,0,0,0,0],[6,7,1,1,8,1,9],[0,1,2,3,4,5,6]],[[{"base":"2,2,0,0,0,0","w":1280,"h":720,"n":"render-texture"}],[4],0,[],[],[]],[[[34,"../demo/6-glow/glow",[{"hash":848531771,"name":"../demo/6-glow/glow|vs:vert|fs:frag","blocks":[{"name":"UBO","stageFlags":16,"binding":0,"members":[{"name":"glowColor","type":16,"count":1},{"name":"textureAspect","type":14,"count":1},{"name":"glowSpread","type":13,"count":1}],"defines":[]}],"samplerTextures":[{"name":"renderTexture","type":28,"count":1,"stageFlags":16,"sampleType":0,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":["USE_LOCAL"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"sampleType":0,"tags":{"builtin":"local"},"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"UBO","stageFlags":16,"binding":0,"members":[{"name":"glowColor","type":16,"count":1},{"name":"textureAspect","type":14,"count":1},{"name":"glowSpread","type":13,"count":1}],"defines":[]}],"samplerTextures":[{"name":"renderTexture","type":28,"count":1,"stageFlags":16,"sampleType":0,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\n  precision highp float;\n  layout(std140) uniform CCGlobal {\n    highp   vec4 cc_time;\n    mediump vec4 cc_screenSize;\n    mediump vec4 cc_nativeSize;\n    mediump vec4 cc_probeInfo;\n    mediump vec4 cc_debug_view_mode;\n  };\n  layout(std140) uniform CCCamera {\n    highp   mat4 cc_matView;\n    highp   mat4 cc_matViewInv;\n    highp   mat4 cc_matProj;\n    highp   mat4 cc_matProjInv;\n    highp   mat4 cc_matViewProj;\n    highp   mat4 cc_matViewProjInv;\n    highp   vec4 cc_cameraPos;\n    mediump vec4 cc_surfaceTransform;\n    mediump vec4 cc_screenScale;\n    mediump vec4 cc_exposure;\n    mediump vec4 cc_mainLitDir;\n    mediump vec4 cc_mainLitColor;\n    mediump vec4 cc_ambientSky;\n    mediump vec4 cc_ambientGround;\n    mediump vec4 cc_fogColor;\n    mediump vec4 cc_fogBase;\n    mediump vec4 cc_fogAdd;\n    mediump vec4 cc_nearFar;\n    mediump vec4 cc_viewPort;\n  };\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n  #if USE_LOCAL\n    layout(std140) uniform CCLocal {\n      highp mat4 cc_matWorld;\n      highp mat4 cc_matWorldIT;\n      highp vec4 cc_lightingMapUVParam;\n      highp vec4 cc_localShadowBias;\n      highp vec4 cc_reflectionProbeData1;\n      highp vec4 cc_reflectionProbeData2;\n      highp vec4 cc_reflectionProbeBlendData1;\n      highp vec4 cc_reflectionProbeBlendData2;\n    };\n  #endif\n  in vec3 a_position;\n  in vec2 a_texCoord;\n  out vec2 uv;\n  #if USE_LOCAL\n    in vec4 a_color;\n    out vec4 v_color;\n  #endif\n  vec4 vert() {\n    vec4 pos = vec4(a_position, 1);\n    #if USE_LOCAL\n      pos = cc_matWorld * pos;\n      v_color = a_color;\n    #endif\n    pos = cc_matViewProj * pos;\n    uv = a_texCoord;\n    uv = uv = cc_cameraPos.w > 1.0 ? vec2(uv.x, 1.0 - uv.y) : uv;\n    return  pos;\n  }\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform sampler2D cc_spriteTexture;\nin vec2 uv;\nuniform sampler2D renderTexture;\nlayout(std140) uniform UBO {\n  vec4 glowColor;\n  vec2 textureAspect;\n  float glowSpread;\n};\nvec4 frag () {\n  vec4 texColor = texture(renderTexture, uv);\n  float centerAlpha = texColor.a;\n  if (centerAlpha > 0.5) return texColor;\n  const int DIR_COUNT = 80;\n  const int STEP_COUNT = 20;\n  float stepSize = glowSpread / float(STEP_COUNT);\n  float minDist = glowSpread;\n  for (int dir = 0; dir < DIR_COUNT; dir++) {\n    float angle  = 6.2831853 * float(dir) / float(DIR_COUNT);\n    vec2  dirVec = vec2(cos(angle), sin(angle));\n    for (int s = 1; s <= STEP_COUNT; s++) {\n      float dist = float(s) * stepSize;\n      vec2  offset = dirVec * dist / textureAspect;\n      float a = texture(renderTexture, uv + offset).a;\n      if (a > 0.5) {\n        minDist = min(minDist, dist);\n        break;\n      }\n    }\n  }\n  vec4 color = texColor;\n  #if USE_GLOW_DECAY\n    float glowFactor = smoothstep(glowSpread, 0.0, minDist);\n    color = glowColor * glowFactor;\n  #else\n    if (minDist < glowSpread) {\n      color = glowColor;\n    }\n  #endif\n  return color;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\n  precision highp float;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n  #if USE_LOCAL\n    uniform highp mat4 cc_matWorld;\n  #endif\n  attribute vec3 a_position;\n  attribute vec2 a_texCoord;\n  varying vec2 uv;\n  #if USE_LOCAL\n    attribute vec4 a_color;\n    varying vec4 v_color;\n  #endif\n  vec4 vert() {\n    vec4 pos = vec4(a_position, 1);\n    #if USE_LOCAL\n      pos = cc_matWorld * pos;\n      v_color = a_color;\n    #endif\n    pos = cc_matViewProj * pos;\n    uv = a_texCoord;\n    uv = uv = cc_cameraPos.w > 1.0 ? vec2(uv.x, 1.0 - uv.y) : uv;\n    return  pos;\n  }\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform sampler2D cc_spriteTexture;\nvarying vec2 uv;\nuniform sampler2D renderTexture;\n   uniform vec4 glowColor;\n   uniform vec2 textureAspect;\n   uniform float glowSpread;\nvec4 frag () {\n  vec4 texColor = texture2D(renderTexture, uv);\n  float centerAlpha = texColor.a;\n  if (centerAlpha > 0.5) return texColor;\n  const int DIR_COUNT = 80;\n  const int STEP_COUNT = 20;\n  float stepSize = glowSpread / float(STEP_COUNT);\n  float minDist = glowSpread;\n  for (int dir = 0; dir < DIR_COUNT; dir++) {\n    float angle  = 6.2831853 * float(dir) / float(DIR_COUNT);\n    vec2  dirVec = vec2(cos(angle), sin(angle));\n    for (int s = 1; s <= STEP_COUNT; s++) {\n      float dist = float(s) * stepSize;\n      vec2  offset = dirVec * dist / textureAspect;\n      float a = texture2D(renderTexture, uv + offset).a;\n      if (a > 0.5) {\n        minDist = min(minDist, dist);\n        break;\n      }\n    }\n  }\n  vec4 color = texColor;\n  #if USE_GLOW_DECAY\n    float glowFactor = smoothstep(glowSpread, 0.0, minDist);\n    color = glowColor * glowFactor;\n  #else\n    if (minDist < glowSpread) {\n      color = glowColor;\n    }\n  #endif\n  return color;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":[]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":56,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":3}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"USE_GLOW_DECAY","type":"boolean"}]}],[{"name":"glow","passes":[{"program":"../demo/6-glow/glow|vs:vert|fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"glowColor":{"type":16,"value":[1,0.8,0.3,1]},"glowSpread":{"type":13,"value":[0.04]},"textureAspect":{"type":14,"value":[1.78,1]},"renderTexture":{"value":"grey","type":28}}}]}]]],0,0,[],[],[]],[[[35,"glow",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_GLOW_DECAY":true}],[[[{"glowSpread":0.045},"renderTexture",6,0]],11]]],0,0,[0,0],[10,11],[0,7]]]]
